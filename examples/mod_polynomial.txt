import scala.language.implicitConversions
import scas.{ModInteger, int2bigInt}
import scas.power.Lexicographic
import scas.polynomial.TreePolynomial
import TreePolynomial.coef2poly

val r = new TreePolynomial(using ModInteger(2), Lexicographic.from[Int]("x"))
val List(x) = r.generators.toList
import r.given

assert(1 + x + 1 >< x)
assert(r.toString == "ModInteger(2)(x)")
assert(r.math == ModInteger(2)(x).math)
