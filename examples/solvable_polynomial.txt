import scas.base.BigInteger
import scas.power.Lexicographic
import scas.polynomial.tree.WeylAlgebra
import BigInteger.given

val r = WeylAlgebra(using BigInteger, Lexicographic[Int]("a", "x", "b", "y"))
val List(a, x, b, y) = r.generators.toList
import r.given

assert (b * a + y * x >< 2+a*b+x*y)
assert (r.toString == BigInteger(a, x, b, y)(1+a*b-b*a, 1+x*y-y*x).toString)
assert (r.math == BigInteger(a, x, b, y)(1+a*b-b*a, 1+x*y-y*x).math)
