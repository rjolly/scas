import scas.base.{BigInteger, Rational}
import scas.module.{Array, ArrayModule}
import BigInteger.given
import Rational.given

val s = ArrayModule(Rational)(2)
val e = s.generators
import s.given

assert (Array(1, 1%%2) >< e(0) + 1%%2 *%e(1))
assert (2 *%e(0) >< e(0)%* 2)
assert (1%%2 *%e(0) >< e(0)%* (1%%2))
assert (e(0) + e(1) >< e(0) + e(1))
assert ((2 *%e(0) + e(1)).toList == Array(2, 1).toList)
assert ((1%%2 *%e(0) + e(1)).toList == Array(1%%2, 1).toList)
assert (s == Rational.pow(2))
